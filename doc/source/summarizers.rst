How to write a summarizer
=============================================

One of looper's primary functions is ``looper summarize``. By default, this will summarize any basic stats reported by your pipeline in the ``stats.tsv`` file. But it can also be made much more powerful, and can run any custom `summarizers` that accompany the pipeline.

A custom summarizer is any script that summarizes pipeline results as a whole, across an entire project. If you specify these in your pipeline interface, ``looper`` will run them automatically when you run ``looper summarize``. You do this by adding a ``summarizers`` section the pipelines section in the ``pipeline_interface.yaml`` file. If you want to include any output in the HTML reports generated by ``looper summarize``, you can also use a ``summary_results`` section to specify any files produced by your summarizer.

A basic example of including a custom summarizer may look like this:


.. code-block:: yaml

    summarizers:
      - tools/summary_plot.R
    summary_results:
      - alignment_percent_file:
        caption: "Alignment percent file"
        description: "Plots percent of total alignment to all pre-alignments and primary genome."
        thumbnail_path: "summary/{name}_alignmentPercent.png"
        path: "summary/{name}_alignmentPercent.pdf"
      - alignment_raw_file:
        caption: "Alignment raw file"
        description: "Plots raw alignment rates to all pre-alignments and primary genome."
        thumbnail_path: "summary/{name}_alignmentRaw.png"
        path: "summary/{name}_alignmentRaw.pdf"


Here, the ``summarizers`` section is just a list of scripts, which will be run by ``looper summarize``. The script must be executable, and should take a single command-line argument, which is the path to the ``project_config.yaml`` file. Looper will execute the script with the command: ``script /path/to/project_config.yaml``. Other than that, your summarizer can do whatever you want. We recommend using our pre-built PEP parsing software, which includes `peppy <https://pepkit.github.io/docs/peppy/>`_ for python code and `pepr <https://pepkit.github.io/docs/pepr/>`_ for R code, which will simplify handling the project input.

The ``summary_results`` section includes information about what your summarizer produces. These files, which can use ``{variable}`` codes for any project attributes, will be used by ``looper summarizer`` to construct an HTML project report.
